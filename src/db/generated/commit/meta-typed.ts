// automatically generated by the FlatBuffers compiler, do not modify

import {IndexChangeMeta} from '../commit/index-change-meta';
import {LocalMeta} from '../commit/local-meta';
import {SnapshotMeta} from '../commit/snapshot-meta';

export enum MetaTyped {
  NONE = 0,
  IndexChangeMeta = 1,
  LocalMeta = 2,
  SnapshotMeta = 3,
}

export function unionToMetaTyped(
  type: MetaTyped,
  accessor: (
    obj: IndexChangeMeta | LocalMeta | SnapshotMeta,
  ) => IndexChangeMeta | LocalMeta | SnapshotMeta | null,
): IndexChangeMeta | LocalMeta | SnapshotMeta | null {
  switch (MetaTyped[type]) {
    case 'NONE':
      return null;
    case 'IndexChangeMeta':
      return accessor(new IndexChangeMeta())! as IndexChangeMeta;
    case 'LocalMeta':
      return accessor(new LocalMeta())! as LocalMeta;
    case 'SnapshotMeta':
      return accessor(new SnapshotMeta())! as SnapshotMeta;
    default:
      return null;
  }
}

export function unionListToMetaTyped(
  type: MetaTyped,
  accessor: (
    index: number,
    obj: IndexChangeMeta | LocalMeta | SnapshotMeta,
  ) => IndexChangeMeta | LocalMeta | SnapshotMeta | null,
  index: number,
): IndexChangeMeta | LocalMeta | SnapshotMeta | null {
  switch (MetaTyped[type]) {
    case 'NONE':
      return null;
    case 'IndexChangeMeta':
      return accessor(index, new IndexChangeMeta())! as IndexChangeMeta;
    case 'LocalMeta':
      return accessor(index, new LocalMeta())! as LocalMeta;
    case 'SnapshotMeta':
      return accessor(index, new SnapshotMeta())! as SnapshotMeta;
    default:
      return null;
  }
}
